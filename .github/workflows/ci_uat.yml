name: Laravel CI/CD to UAT

on:
  push:
    branches: [uat] # atau 'master' tergantung nama branch
  pull_request:
    branches: [uat]

jobs:
  tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/uat'
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dblab_booking
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, mysql
        coverage: none

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
    
    - name: Install frontend dependencies
      run: npm install

    - name: Build frontend assets
      run: npm run build
    
    - name: Copy .env
      run: cp .env.example .env

    - name: Generate app key
      run: php artisan key:generate

    - name: Run migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: dblab_booking
        DB_USERNAME: root
        DB_PASSWORD: root    
    
    - name: Run tests
      run: php artisan test
   
  deploy:
    needs: tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/uat'

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dblab_booking
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, mysql
          coverage: none
  
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      
      - name: Install frontend dependencies
        run: npm install
  
      - name: Build frontend assets
        run: npm run build
      
      - name: Copy .env
        run: cp .env.example .env
  
      - name: Generate app key
        run: php artisan key:generate
  
      - name: Run migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: dblab_booking
          DB_USERNAME: root
          DB_PASSWORD: root    
      
      - name: Client Install Varcel dependencies
        run: npm install
    
      - name: Build Client
        run: npm run build
  
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
  
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --output public

      - name: Vercel Deploy
        #uses: amondnet/vercel-action@v25
        run: vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
        #with:
          #vercel-token: ${{ secrets.VERCEL_TOKEN }}
          #vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          #vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          #working-directory: ./
          #alias-domains: your-uat-project.vercel.app
        env:
          VERCEL_ENV: preview     
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}    
 